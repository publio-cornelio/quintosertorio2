{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Soporte t\u00e9cnico de verba volant Esta web esta creada por un generador de sitios web, orientado a generar documentacion en linea. En \u00e9l, deseo mostrar todas los aspectos tecnicos que hay detras de este proyecto, para facilitar su mantenimiento y replica. El proyecto consta de tres componentes diferenciados: Una pagina de presentacion realizada mediante html, css y un poco de javascript. Este sitio web de documentacion en linea Un blog, similar en estructura a este sitio web, pero con un enfoque estetico mas cercano a los blogs tipicos.","title":"Inicio"},{"location":"#soporte-tecnico-de-verba-volant","text":"Esta web esta creada por un generador de sitios web, orientado a generar documentacion en linea. En \u00e9l, deseo mostrar todas los aspectos tecnicos que hay detras de este proyecto, para facilitar su mantenimiento y replica. El proyecto consta de tres componentes diferenciados: Una pagina de presentacion realizada mediante html, css y un poco de javascript. Este sitio web de documentacion en linea Un blog, similar en estructura a este sitio web, pero con un enfoque estetico mas cercano a los blogs tipicos.","title":"Soporte t\u00e9cnico de verba volant"},{"location":"configuracion_yaml/","text":"Configuracion del sistema Mkdocs puede funcionar con una configuracion minima que incluye el titulo del sistema, los enlaces del navegador, con el titulo de cada articulo y el nombre del archivo al que se encuentra enlazado, en la forma: site_name: Soporte tecnico nav: - Inicio: index.md - Soporte tecnico de esta web: mkdocs.md - Tecnica de escritura : markdown.md - Tecnica de escritura avanzada : markdown_extensions.md Yo he decidido cambiar el tema y a\u00f1adir una extension de markdow que soporta abreviaturas. theme: readthedocs markdown_extensions: - abbr Sobre las extensiones de markdown no hablaremos en este articulo, estan explicadas en un articulo previo . Copyright La palabra clave 'copyright' te permite incluir una nota a pie de pagina con informacion legal y sus links, escritos en html. copyright: Copyright &copy; 2022 <a href=\"#\">Aviso legal</a>, Maintained by the <a href=\"\">QuintoSertorio</a> Temas. Adaptacion y configuracion. Los temas se refieren al estilo del programa. De base, existen dos para elegir (mkdocs o readthedocs), pero se pueden crear temas nuevos, adaptar temas ya existentes o descargar nuevos temas de terceros . Para adaptar el tema elegido, debemos indicar la localizacion del archivo css con una referencia relativa: extra_css: - css/extra.css Para configurar existen una serie de palabras clave: name, para seleccionar el tema. locale, el lenguaje que va a utilizar el tema. En la documentacion encontraremos a que idiomas esta traducido. analytics, define las caracteristicas de un servicio analitico, como Google Analytics highlightjs, activa el resalte con colores de los bloques de codigo mediante la libreria highlight.js . Valor por defecto es true. hljs_languages, incluye lenguaje de programacion no incluido en el soporte basico. La lista continua, con una descripcion exhaustiva de los dos temas basicos en el enlace Plugins Los temas incluyen un unico plugin de base que es el buscador, el cual utiliza el programa lunr.js como motor de busquedas. Si decidimos configurar los plugins, es necesario especificar la opcion search para que conserve esta funcionalidad. La sintaxis es de dos tipos,o bien con guiones - o con llaves{}, por lo que hay que ser preciso y no mezclarlos. lugins: - search - your_other_plugin: option1: value option2: other value plugins: search: {} your_other_plugin: option1: value option2: other value El buscador Es un elemento muy util del programa que se puede configurar levemente utilizando las siguientes palabras claves: Palabra clave Por defecto separator '[\\s\\-]+' min_search_length 3 lang 1. theme.locale , 2. en prebuild_index False indexing full Otros plugins En lo referente a otros plugins les remito a un articulo donde se muestran algunas utilidades para integra el jupyter notebook, o para realizar graficos. Otra direccion utile es Pymdown extensions . En general, se trata de utilidades tecnicas propias de la ciencia de datos, que se alejan del objetivo de este blog. Conclusion En este punto, se cierra el ciclo de articulos enfocados en mkdocs. La siguiente etapa se centrara en el servicio anfitrion de la nube, Netlify y del sistema de publicacion con Git y Github.","title":"Configuracion del sistema"},{"location":"configuracion_yaml/#configuracion-del-sistema","text":"Mkdocs puede funcionar con una configuracion minima que incluye el titulo del sistema, los enlaces del navegador, con el titulo de cada articulo y el nombre del archivo al que se encuentra enlazado, en la forma: site_name: Soporte tecnico nav: - Inicio: index.md - Soporte tecnico de esta web: mkdocs.md - Tecnica de escritura : markdown.md - Tecnica de escritura avanzada : markdown_extensions.md Yo he decidido cambiar el tema y a\u00f1adir una extension de markdow que soporta abreviaturas. theme: readthedocs markdown_extensions: - abbr Sobre las extensiones de markdown no hablaremos en este articulo, estan explicadas en un articulo previo .","title":"Configuracion del sistema"},{"location":"configuracion_yaml/#copyright","text":"La palabra clave 'copyright' te permite incluir una nota a pie de pagina con informacion legal y sus links, escritos en html. copyright: Copyright &copy; 2022 <a href=\"#\">Aviso legal</a>, Maintained by the <a href=\"\">QuintoSertorio</a>","title":"Copyright"},{"location":"configuracion_yaml/#temas-adaptacion-y-configuracion","text":"Los temas se refieren al estilo del programa. De base, existen dos para elegir (mkdocs o readthedocs), pero se pueden crear temas nuevos, adaptar temas ya existentes o descargar nuevos temas de terceros . Para adaptar el tema elegido, debemos indicar la localizacion del archivo css con una referencia relativa: extra_css: - css/extra.css Para configurar existen una serie de palabras clave: name, para seleccionar el tema. locale, el lenguaje que va a utilizar el tema. En la documentacion encontraremos a que idiomas esta traducido. analytics, define las caracteristicas de un servicio analitico, como Google Analytics highlightjs, activa el resalte con colores de los bloques de codigo mediante la libreria highlight.js . Valor por defecto es true. hljs_languages, incluye lenguaje de programacion no incluido en el soporte basico. La lista continua, con una descripcion exhaustiva de los dos temas basicos en el enlace","title":"Temas. Adaptacion y configuracion."},{"location":"configuracion_yaml/#plugins","text":"Los temas incluyen un unico plugin de base que es el buscador, el cual utiliza el programa lunr.js como motor de busquedas. Si decidimos configurar los plugins, es necesario especificar la opcion search para que conserve esta funcionalidad. La sintaxis es de dos tipos,o bien con guiones - o con llaves{}, por lo que hay que ser preciso y no mezclarlos. lugins: - search - your_other_plugin: option1: value option2: other value plugins: search: {} your_other_plugin: option1: value option2: other value","title":"Plugins"},{"location":"configuracion_yaml/#el-buscador","text":"Es un elemento muy util del programa que se puede configurar levemente utilizando las siguientes palabras claves: Palabra clave Por defecto separator '[\\s\\-]+' min_search_length 3 lang 1. theme.locale , 2. en prebuild_index False indexing full","title":"El buscador"},{"location":"configuracion_yaml/#otros-plugins","text":"En lo referente a otros plugins les remito a un articulo donde se muestran algunas utilidades para integra el jupyter notebook, o para realizar graficos. Otra direccion utile es Pymdown extensions . En general, se trata de utilidades tecnicas propias de la ciencia de datos, que se alejan del objetivo de este blog.","title":"Otros plugins"},{"location":"configuracion_yaml/#conclusion","text":"En este punto, se cierra el ciclo de articulos enfocados en mkdocs. La siguiente etapa se centrara en el servicio anfitrion de la nube, Netlify y del sistema de publicacion con Git y Github.","title":"Conclusion"},{"location":"desarrollo_css/","text":"Creaci\u00f3n paso a paso de p\u00e1gina web La pagina de presentaci\u00f3n de este sitio web, es una \u2018web resposive\u2019. Esto significa que su distribuci\u00f3n se modifica conforme al tama\u00f1o de pantalla del dispositivo, manteniendo un estilo atractivo. Este tipo de paginas web se ha ido imponiendo con la aparici\u00f3n de los dispositivos m\u00f3viles. La raz\u00f3n es que la interacci\u00f3n con el dispositivo m\u00f3vil y el ordenador es distinta, en uno se da preferencia al desplazamiento vertical de la pagina y en el otro al click con el raton. Para unir estas dos caracter\u00edsticas, lo ideal es realizar una \u00fanica pagina de presentaci\u00f3n donde te desplazas verticalmente o a trav\u00e9s de clics en el navegador. Herramientas La herramienta b\u00e1sica en cualquier programaci\u00f3n es un editor de texto, si bien, para facilitar la tarea es preferible un entorno de desarrollo, siendo mi recomendaci\u00f3n Visual Studio Code. Presenta un sistema de auto-completado de etiquetas html muy util y la posibilidad de lanzar un servidor para ver la evoluci\u00f3n de la pagina web a medida que realizamos cambios. Otra herramienta imprescindible es un entorno de desarrollo en linea llamado Codepen, que te permite hacer simulacros de partes de tu pagina web para ver su funcionamiento y luego incorporarlos a tu propio proyecto. Tambi\u00e9n tiene una biblioteca de proyectos de otras personas, que puedes manipular como proceso de aprendizaje. Proceso paso a paso. El proceso de creaci\u00f3n de una pagina web conviene realizarlo desde lo general a lo particular. La base del dise\u00f1o son los distintos bloques que constituyen el cuerpo de la pagina, con su texto y fotos. Luego el pie de pagina, y por ultimo el cabecero que incluye el navegador que es el apartado mas din\u00e1mico y con una distribuci\u00f3n mas complicada. La base del dise\u00f1o. En este punto voy a recomendar el tutorial realizado por Kevin Powell . Es insuperable. Quiero destacar dos cosas: El uso que hace del m\u00f3dulo flexbox, pudiendo ampliar el conocimiento de este m\u00f3dulo con otros tutoriales del mismo autor. Como comienza a configurar su archivo css desde caracter\u00edsticas generales de tipograf\u00eda, de color de fondo y fuentes; y con la eliminacion de los margenes preconfigurados en los distintos elementos. Crear el pie de pagina. El pie de pagina es el bloque inferior de la base del dise\u00f1o, por lo que se aplica la misma t\u00e9cnica. La diferencia es que por convenci\u00f3n, en este apartado se sit\u00faan los avisos legales, la pol\u00edtica de privacidad y de cookies. En breve, es obligatorio incluir todo estos apartados en aquellas paginas en que se busque un beneficio econ\u00f3mico, se recopilen datos de los usuarios -por ejemplo, en formularios \u2013 o se utilicen cookies. Crear el cabecero, con el navegador. La distribuci\u00f3n de elementos tiene sus caracter\u00edsticas particulares en comparaci\u00f3n al dise\u00f1o base y exige un control mayor de los cambios, ya que podemos hacer aparecer y desaparecer elementos del navegador en funci\u00f3n del tama\u00f1o de pantalla. Este tutorial de Kevin Powell resulta muy clarificador. Conclusi\u00f3n Siguiendo los pasos en los tutoriales descritos se puede realizar una pagina web responsive basada exclusivamente en html y css. Kevin Powell es un gran comunicador y sus innumerables tutoriales facilitan la comprensi\u00f3n de los distintos componentes de css. Ademas, los ejemplos de Codepen te aportan nuevas ideas y tecnicas haciendo que este sea un camino relativamente f\u00e1cil de introducirse en el mundo de la programaci\u00f3n.","title":"Creaci\u00f3n paso a paso de p\u00e1gina web"},{"location":"desarrollo_css/#creacion-paso-a-paso-de-pagina-web","text":"La pagina de presentaci\u00f3n de este sitio web, es una \u2018web resposive\u2019. Esto significa que su distribuci\u00f3n se modifica conforme al tama\u00f1o de pantalla del dispositivo, manteniendo un estilo atractivo. Este tipo de paginas web se ha ido imponiendo con la aparici\u00f3n de los dispositivos m\u00f3viles. La raz\u00f3n es que la interacci\u00f3n con el dispositivo m\u00f3vil y el ordenador es distinta, en uno se da preferencia al desplazamiento vertical de la pagina y en el otro al click con el raton. Para unir estas dos caracter\u00edsticas, lo ideal es realizar una \u00fanica pagina de presentaci\u00f3n donde te desplazas verticalmente o a trav\u00e9s de clics en el navegador.","title":"Creaci\u00f3n paso a paso de p\u00e1gina web"},{"location":"desarrollo_css/#herramientas","text":"La herramienta b\u00e1sica en cualquier programaci\u00f3n es un editor de texto, si bien, para facilitar la tarea es preferible un entorno de desarrollo, siendo mi recomendaci\u00f3n Visual Studio Code. Presenta un sistema de auto-completado de etiquetas html muy util y la posibilidad de lanzar un servidor para ver la evoluci\u00f3n de la pagina web a medida que realizamos cambios. Otra herramienta imprescindible es un entorno de desarrollo en linea llamado Codepen, que te permite hacer simulacros de partes de tu pagina web para ver su funcionamiento y luego incorporarlos a tu propio proyecto. Tambi\u00e9n tiene una biblioteca de proyectos de otras personas, que puedes manipular como proceso de aprendizaje.","title":"Herramientas"},{"location":"desarrollo_css/#proceso-paso-a-paso","text":"El proceso de creaci\u00f3n de una pagina web conviene realizarlo desde lo general a lo particular. La base del dise\u00f1o son los distintos bloques que constituyen el cuerpo de la pagina, con su texto y fotos. Luego el pie de pagina, y por ultimo el cabecero que incluye el navegador que es el apartado mas din\u00e1mico y con una distribuci\u00f3n mas complicada. La base del dise\u00f1o. En este punto voy a recomendar el tutorial realizado por Kevin Powell . Es insuperable. Quiero destacar dos cosas: El uso que hace del m\u00f3dulo flexbox, pudiendo ampliar el conocimiento de este m\u00f3dulo con otros tutoriales del mismo autor. Como comienza a configurar su archivo css desde caracter\u00edsticas generales de tipograf\u00eda, de color de fondo y fuentes; y con la eliminacion de los margenes preconfigurados en los distintos elementos. Crear el pie de pagina. El pie de pagina es el bloque inferior de la base del dise\u00f1o, por lo que se aplica la misma t\u00e9cnica. La diferencia es que por convenci\u00f3n, en este apartado se sit\u00faan los avisos legales, la pol\u00edtica de privacidad y de cookies. En breve, es obligatorio incluir todo estos apartados en aquellas paginas en que se busque un beneficio econ\u00f3mico, se recopilen datos de los usuarios -por ejemplo, en formularios \u2013 o se utilicen cookies. Crear el cabecero, con el navegador. La distribuci\u00f3n de elementos tiene sus caracter\u00edsticas particulares en comparaci\u00f3n al dise\u00f1o base y exige un control mayor de los cambios, ya que podemos hacer aparecer y desaparecer elementos del navegador en funci\u00f3n del tama\u00f1o de pantalla. Este tutorial de Kevin Powell resulta muy clarificador.","title":"Proceso paso a paso."},{"location":"desarrollo_css/#conclusion","text":"Siguiendo los pasos en los tutoriales descritos se puede realizar una pagina web responsive basada exclusivamente en html y css. Kevin Powell es un gran comunicador y sus innumerables tutoriales facilitan la comprensi\u00f3n de los distintos componentes de css. Ademas, los ejemplos de Codepen te aportan nuevas ideas y tecnicas haciendo que este sea un camino relativamente f\u00e1cil de introducirse en el mundo de la programaci\u00f3n.","title":"Conclusi\u00f3n"},{"location":"html_tecnica/","text":"Creacion de paginas web La creaci\u00f3n de paginas webs se basa en dos lenguajes de marcado con etiquetas, html y css, y un lenguaje de programaci\u00f3n, javascript ( js ) Un lenguaje de marcado es aquel que junto al texto incorpora etiquetas que nos indican que funci\u00f3n tiene dicho texto en dicho documento, por ejemplo, en html <p></p> nos indica que el texto contenido es un p\u00e1rrafo. Css es un lenguaje de marcado que utiliza las etiquetas creadas en html, para modificar los atributos est\u00e9ticos del documento y mostrarnos el texto en pantalla con una distribuci\u00f3n, tama\u00f1o y est\u00e9ticas determinadas. Por contra, js es un lenguaje de programaci\u00f3n, con estructuras de control, variables, funciones; su objetivo es facilitar en las paginas web, una est\u00e9tica din\u00e1mico y un comportamiento interactivo con el usuario. Lenguajes de marcado. HTML y CSS Html es la columna vertebral de cualquier documento en la web. Presenta numerosas etiquetas nativas. El n\u00facleo b\u00e1sico son t\u00e9rminos propios de un procesador de textos como encabezado, p\u00e1rrafo, secci\u00f3n; que se ampl\u00edan con metadatos, con secciones propias de una pagina web como el navegador, y con etiquetas orientadas a incrustar im\u00e1genes, contenido multimedia, tablas o formularios. La presentaci\u00f3n por defecto de un archivo html sigue un patr\u00f3n flow layout. Lo cual significa, que hay elementos block que se sit\u00faan uno de bajo de otro y elementos inline (el texto) que se se sit\u00faa uno a continuaci\u00f3n del otro. Pero hablar de elementos en bloque o en linea, es pasar a la terminolog\u00eda del css. Esta habla de la distribuci\u00f3n en el espacio de los distintos elementos, de elementos contenedores y elementos contenidos, de los cambios en la disposici\u00f3n en funci\u00f3n del tama\u00f1o de la pantalla. Css utiliza las etiquetas propias del html para seleccionar los elementos y distribuirlos. Y a su vez influye en la creaci\u00f3n de elementos auxiliares que actuando como contenedores faciliten dicha distribuci\u00f3n. Con este fin, etiquetas como divisi\u00f3n o span, que no definen una posici\u00f3n precisa dentro de la estructura de un texto, cumplen una funci\u00f3n esencial detr\u00e1s de escena. Llegados a este punto parece \u00fatil poner un ejemplo sencillo con los elementos esenciales que componen la relaci\u00f3n entre html y css. Html <div class=\"division\"></div> <h1>Esto es un encabezado</h1> <p class=\"texto_azul\">Lorem ipsum dolor sit amet consectetur. Fugit, id.</p> <p class=\"texto_azul\">Lorem ipsum dolor sit, amet consectetur adipisicing elit.</p> <p>Lorem ipsum dolor sit amet.</p> </div> Css div {} .division{} h1 {} p {} .texto_azul{ color: blue; } En este ejemplo es interesante resaltar la relacion entre el continente div y el contenido organizado en un cabecero y tres parrafos. Css puede hacer referencia tanto a las etiquetas nativas de html, como a las clases precedidas por un punto. En este caso hemos agrupado dos parrafos y les hemos dado un atributo diferenciador. El sistema es sencillo y muy flexible, y exige asignar los atributos de manera ordenada, partiendo de aquellos generales que afectan a todo el documento para continuar hacia los mas especificos. La clave en el uso del Css esta en los atributos que determinan la disposicion espacial. Existen varios modelos de disposicion espacial, cada uno con sus atributos. Conocer el modelo es imprescindible para entender la terminologia y aplicacion de sus atributos. Pero esto forma parte del proximo articulo. Javascript y librerias de componentes. Js es el componente del trio mas dificil de manejar, si bien se pueden hacer buenas paginas web solo con los otros dos. En la web de presentacion el uso de js es minimo. Activa la escucha de tres eventos: el movimiento del scroll, el click de un boton y el cambio de tama\u00f1o de pantalla. En funcion de la entrada de datos controla la trasparencia del cabezero. Para facilitar la referencia a las etiquetas y clases del html, el archivo html incorpora una libreria de componentes jquery. Estas librerias de componentes son archivos css o js creados por terceros, que incorporan distintas utilidades como facilitar el uso de javascript o mejorar la calidad de los elementos graficos. Conclusion Esta introduccion busca ser un marco de referencia antes de comenzar a crear nuestra primera pagina web. La escritura basica de html y css es sencilla, y la complejidad esta hacer crecer un proyecto de forma ordenada sin entrar en contradicciones entre los distintos elementos. En el proximo capitulo mostrare como se desarrollo la web de presentacion.","title":"Aspectos b\u00e1sicos"},{"location":"html_tecnica/#creacion-de-paginas-web","text":"La creaci\u00f3n de paginas webs se basa en dos lenguajes de marcado con etiquetas, html y css, y un lenguaje de programaci\u00f3n, javascript ( js ) Un lenguaje de marcado es aquel que junto al texto incorpora etiquetas que nos indican que funci\u00f3n tiene dicho texto en dicho documento, por ejemplo, en html <p></p> nos indica que el texto contenido es un p\u00e1rrafo. Css es un lenguaje de marcado que utiliza las etiquetas creadas en html, para modificar los atributos est\u00e9ticos del documento y mostrarnos el texto en pantalla con una distribuci\u00f3n, tama\u00f1o y est\u00e9ticas determinadas. Por contra, js es un lenguaje de programaci\u00f3n, con estructuras de control, variables, funciones; su objetivo es facilitar en las paginas web, una est\u00e9tica din\u00e1mico y un comportamiento interactivo con el usuario.","title":"Creacion de paginas web"},{"location":"html_tecnica/#lenguajes-de-marcado-html-y-css","text":"Html es la columna vertebral de cualquier documento en la web. Presenta numerosas etiquetas nativas. El n\u00facleo b\u00e1sico son t\u00e9rminos propios de un procesador de textos como encabezado, p\u00e1rrafo, secci\u00f3n; que se ampl\u00edan con metadatos, con secciones propias de una pagina web como el navegador, y con etiquetas orientadas a incrustar im\u00e1genes, contenido multimedia, tablas o formularios. La presentaci\u00f3n por defecto de un archivo html sigue un patr\u00f3n flow layout. Lo cual significa, que hay elementos block que se sit\u00faan uno de bajo de otro y elementos inline (el texto) que se se sit\u00faa uno a continuaci\u00f3n del otro. Pero hablar de elementos en bloque o en linea, es pasar a la terminolog\u00eda del css. Esta habla de la distribuci\u00f3n en el espacio de los distintos elementos, de elementos contenedores y elementos contenidos, de los cambios en la disposici\u00f3n en funci\u00f3n del tama\u00f1o de la pantalla. Css utiliza las etiquetas propias del html para seleccionar los elementos y distribuirlos. Y a su vez influye en la creaci\u00f3n de elementos auxiliares que actuando como contenedores faciliten dicha distribuci\u00f3n. Con este fin, etiquetas como divisi\u00f3n o span, que no definen una posici\u00f3n precisa dentro de la estructura de un texto, cumplen una funci\u00f3n esencial detr\u00e1s de escena. Llegados a este punto parece \u00fatil poner un ejemplo sencillo con los elementos esenciales que componen la relaci\u00f3n entre html y css. Html <div class=\"division\"></div> <h1>Esto es un encabezado</h1> <p class=\"texto_azul\">Lorem ipsum dolor sit amet consectetur. Fugit, id.</p> <p class=\"texto_azul\">Lorem ipsum dolor sit, amet consectetur adipisicing elit.</p> <p>Lorem ipsum dolor sit amet.</p> </div> Css div {} .division{} h1 {} p {} .texto_azul{ color: blue; } En este ejemplo es interesante resaltar la relacion entre el continente div y el contenido organizado en un cabecero y tres parrafos. Css puede hacer referencia tanto a las etiquetas nativas de html, como a las clases precedidas por un punto. En este caso hemos agrupado dos parrafos y les hemos dado un atributo diferenciador. El sistema es sencillo y muy flexible, y exige asignar los atributos de manera ordenada, partiendo de aquellos generales que afectan a todo el documento para continuar hacia los mas especificos. La clave en el uso del Css esta en los atributos que determinan la disposicion espacial. Existen varios modelos de disposicion espacial, cada uno con sus atributos. Conocer el modelo es imprescindible para entender la terminologia y aplicacion de sus atributos. Pero esto forma parte del proximo articulo.","title":"Lenguajes de marcado. HTML y CSS"},{"location":"html_tecnica/#javascript-y-librerias-de-componentes","text":"Js es el componente del trio mas dificil de manejar, si bien se pueden hacer buenas paginas web solo con los otros dos. En la web de presentacion el uso de js es minimo. Activa la escucha de tres eventos: el movimiento del scroll, el click de un boton y el cambio de tama\u00f1o de pantalla. En funcion de la entrada de datos controla la trasparencia del cabezero. Para facilitar la referencia a las etiquetas y clases del html, el archivo html incorpora una libreria de componentes jquery. Estas librerias de componentes son archivos css o js creados por terceros, que incorporan distintas utilidades como facilitar el uso de javascript o mejorar la calidad de los elementos graficos.","title":"Javascript y librerias de componentes."},{"location":"html_tecnica/#conclusion","text":"Esta introduccion busca ser un marco de referencia antes de comenzar a crear nuestra primera pagina web. La escritura basica de html y css es sencilla, y la complejidad esta hacer crecer un proyecto de forma ordenada sin entrar en contradicciones entre los distintos elementos. En el proximo capitulo mostrare como se desarrollo la web de presentacion.","title":"Conclusion"},{"location":"markdown/","text":"Tecnica de escritura con Markdown En este apartado, veremos significa escribir en Markdown, y cuales son las convecciones y etiquetas que se utilizan para que el editor pueda procesarlo en un texto formateado. Saltarse el formateado de texto Como el tema que estamos tratando consiste en mostrar las diferencias entre el texto formateado y sin formatear, la mejor manera es utilizar las herramientas que nos permiten evitar que el texto sea formateado. La forma basica de evitar el formateado es indentando el p\u00e1rrafo con tab o con cuatro espacios en blanco. Una forma mas evolucionada es delimitar el bloque entre una linea de virgulillas ~~~ o una linea comillas invertidas ```. Deben ser tres o mas, y con la misma cantidad al principio y al final. Si se trata de codigo e incluimos el tipo de lenguaje al final de la linea inicial (~~~yaml), el texto queda resaltado diferenciando los distintos elementos. site_name: Soporte tecnico nav: - Inicio: index.md - Soporte tecnico de esta web: mkdocs.md - Tecnica de escritura : markdown.md theme: readthedocs Otro metodo es incluir una linea entre comillas invertidas `. Ademas, si casualmente el texto acotado necesita mostrar comillas invertidas en el texto, podemos delimitarlo con dos `` Este texto se mostrara como una `linea` de c\u00f3digo Este texto se mostrara como una linea de c\u00f3digo Por ultimo, es interesante poder mostrar los signos utilizados para etiquetar el texto, para ello utilizamos una barra invertida \\. Por ultimo, es interesante poder mostrar los signos utilizados para etiquetar el texto, para ello utilizamos una barra invertida \\\\ A\u00f1adir links Los links es lo mas caracteristico en cualquier pagina web, un metodo para conectar contenidos relacionados. En markdown un link se realiza utilizando corchetes [] para incluir el texto mostrado, seguido de parentesis () con el enlace. Asi por ejemplo, link al inicio de esta pagina , tiene el siguiente texto simple: [link al inicio de esta pagina](markdown.md#tecnica-de-escritura-con-markdown) Se pueden utilizar referencias absolutas, relativas y cruzadas. En el caso de las referencias cruzadas que son las dirigidas a los encabezamientos del propio articulo, se basan en identificadores generados de forma automatica por el programa y las puede encontrar en la barra de direcciones del navegador. Pulse la direccion que desea en el navegador de la pagina y copie el texto que sigue al signo almohadilla, en la forma: [referencias cruzadas](#tecnica-de-escritura-con-markdown) . Otro metodo es que muestra el link directamente es utilizar par\u00e9ntesis puntiagudos<> en la forma <http://google.es> , que se mostraria con http://google.es . Si deseamos incluir una imagen, un signo de cierre de exclamacion ! debe preceder al formato del link. La siguiente imagen se obtiene escribiendo: ![Imagen ](/img/screenshot.png) ![Imagen ](/img/screenshot.png\"Esta imagen tiene titulo\") Utilizamos una referencia relativa hacia el directorio donde archivamos la imagen. En la segunda a\u00f1adimos un texto entre comillas dobles, para mostrar un texto al posar el cursor. Por ultimo, les dejo la referencia a un archivo con el texto simple completo de este articulo. Una linea [referencia](/src/markdown.txt) facilita la descarga del documento en su navegador. Estructurar texto Titulos y encabezados es la manera mas basica de estructurar un texto, y se hace con un signo introductorio de almohadilla #. El encabezado de este articulo esta formado por: # Tecnica de escritura con Markdown ## Estructurar texto ### Este seria un encabezado del siguiente nivel Otro metodo utiliza los signos igual \\= y el signo menos -. Si bien solo dispone de dos niveles equivalentes a los dos primeros niveles: Tecnica de escritura con Markdown === Estructura texto --- Las listas{#listas} es otro tipo de organizacion, exitiendo: Listas ordenadas, que utilizan numeros Listas desordenadas, que utiliza indistintamente los signos: El signo * El signo + El signo - 1. Listas ordenadas, que utilizan numeros 2. Listas desordenadas, que utiliza indistintamente los signos: * El signo \\* + El signo \\+ - El signo \\- Hay que indicar, que para anidar una lista se indenta con cuatro espacios. Para enfatizar nuestro texto, se aplican indistintamente asteriscos * y guiones bajos_. simple en cursiva _simple en cursiva_, *simple en cursiva* doble en negrita __doble en negrita__, **doble en negrita** Para indicar que estamos citando a otro autor >se utiliza al inicio el signo de desigualdad \\> se utiliza al inicio el signo de desigualdad > Los parrafos se generan con un espacio de una linea en blanco. A\u00f1adir mas de una linea no se traduce en un mayor numero de lineas en el texto formateado. Para hacer un salto de linea incluido en el mismo parrafo, es preciso cerrar la linea con dos espacios antes de dar a la tecla Enter. Para remarcar el cierre de una seccion se puede a\u00f1adir una linea mediante asteriscos \\*, guiones -, y guiones bajos _, indistintamente. Por ejemplo, el siguiente texto origina tres lineas identicas. --- *** ___ Conclusion Markdown nos ofrece un numero abundante de etiquetas, que actuan como atajos para procesar el texto que escribimos directamente en el teclado. Acostumbrarse a usarlos lleva tiempo, pero al final nos permite escribir un texto embellecido con mucha mayor rapidez en el momento de crear nuestro blog. Existen una serie de caracteristicas avanzadas, que suponen una evolucion posterior del lenguaje original y que se denomino Multimarkdown. Seran tratadas en nuestro proximo articulo.","title":"Tecnica de escritura"},{"location":"markdown/#tecnica-de-escritura-con-markdown","text":"En este apartado, veremos significa escribir en Markdown, y cuales son las convecciones y etiquetas que se utilizan para que el editor pueda procesarlo en un texto formateado.","title":"Tecnica de escritura con Markdown"},{"location":"markdown/#saltarse-el-formateado-de-texto","text":"Como el tema que estamos tratando consiste en mostrar las diferencias entre el texto formateado y sin formatear, la mejor manera es utilizar las herramientas que nos permiten evitar que el texto sea formateado. La forma basica de evitar el formateado es indentando el p\u00e1rrafo con tab o con cuatro espacios en blanco. Una forma mas evolucionada es delimitar el bloque entre una linea de virgulillas ~~~ o una linea comillas invertidas ```. Deben ser tres o mas, y con la misma cantidad al principio y al final. Si se trata de codigo e incluimos el tipo de lenguaje al final de la linea inicial (~~~yaml), el texto queda resaltado diferenciando los distintos elementos. site_name: Soporte tecnico nav: - Inicio: index.md - Soporte tecnico de esta web: mkdocs.md - Tecnica de escritura : markdown.md theme: readthedocs Otro metodo es incluir una linea entre comillas invertidas `. Ademas, si casualmente el texto acotado necesita mostrar comillas invertidas en el texto, podemos delimitarlo con dos `` Este texto se mostrara como una `linea` de c\u00f3digo Este texto se mostrara como una linea de c\u00f3digo Por ultimo, es interesante poder mostrar los signos utilizados para etiquetar el texto, para ello utilizamos una barra invertida \\. Por ultimo, es interesante poder mostrar los signos utilizados para etiquetar el texto, para ello utilizamos una barra invertida \\\\","title":"Saltarse el formateado de texto"},{"location":"markdown/#anadir-links","text":"Los links es lo mas caracteristico en cualquier pagina web, un metodo para conectar contenidos relacionados. En markdown un link se realiza utilizando corchetes [] para incluir el texto mostrado, seguido de parentesis () con el enlace. Asi por ejemplo, link al inicio de esta pagina , tiene el siguiente texto simple: [link al inicio de esta pagina](markdown.md#tecnica-de-escritura-con-markdown) Se pueden utilizar referencias absolutas, relativas y cruzadas. En el caso de las referencias cruzadas que son las dirigidas a los encabezamientos del propio articulo, se basan en identificadores generados de forma automatica por el programa y las puede encontrar en la barra de direcciones del navegador. Pulse la direccion que desea en el navegador de la pagina y copie el texto que sigue al signo almohadilla, en la forma: [referencias cruzadas](#tecnica-de-escritura-con-markdown) . Otro metodo es que muestra el link directamente es utilizar par\u00e9ntesis puntiagudos<> en la forma <http://google.es> , que se mostraria con http://google.es . Si deseamos incluir una imagen, un signo de cierre de exclamacion ! debe preceder al formato del link. La siguiente imagen se obtiene escribiendo: ![Imagen ](/img/screenshot.png) ![Imagen ](/img/screenshot.png\"Esta imagen tiene titulo\") Utilizamos una referencia relativa hacia el directorio donde archivamos la imagen. En la segunda a\u00f1adimos un texto entre comillas dobles, para mostrar un texto al posar el cursor. Por ultimo, les dejo la referencia a un archivo con el texto simple completo de este articulo. Una linea [referencia](/src/markdown.txt) facilita la descarga del documento en su navegador.","title":"A\u00f1adir links"},{"location":"markdown/#estructurar-texto","text":"Titulos y encabezados es la manera mas basica de estructurar un texto, y se hace con un signo introductorio de almohadilla #. El encabezado de este articulo esta formado por: # Tecnica de escritura con Markdown ## Estructurar texto ### Este seria un encabezado del siguiente nivel Otro metodo utiliza los signos igual \\= y el signo menos -. Si bien solo dispone de dos niveles equivalentes a los dos primeros niveles: Tecnica de escritura con Markdown === Estructura texto --- Las listas{#listas} es otro tipo de organizacion, exitiendo: Listas ordenadas, que utilizan numeros Listas desordenadas, que utiliza indistintamente los signos: El signo * El signo + El signo - 1. Listas ordenadas, que utilizan numeros 2. Listas desordenadas, que utiliza indistintamente los signos: * El signo \\* + El signo \\+ - El signo \\- Hay que indicar, que para anidar una lista se indenta con cuatro espacios. Para enfatizar nuestro texto, se aplican indistintamente asteriscos * y guiones bajos_. simple en cursiva _simple en cursiva_, *simple en cursiva* doble en negrita __doble en negrita__, **doble en negrita** Para indicar que estamos citando a otro autor >se utiliza al inicio el signo de desigualdad \\> se utiliza al inicio el signo de desigualdad > Los parrafos se generan con un espacio de una linea en blanco. A\u00f1adir mas de una linea no se traduce en un mayor numero de lineas en el texto formateado. Para hacer un salto de linea incluido en el mismo parrafo, es preciso cerrar la linea con dos espacios antes de dar a la tecla Enter. Para remarcar el cierre de una seccion se puede a\u00f1adir una linea mediante asteriscos \\*, guiones -, y guiones bajos _, indistintamente. Por ejemplo, el siguiente texto origina tres lineas identicas. --- *** ___","title":"Estructurar texto"},{"location":"markdown/#conclusion","text":"Markdown nos ofrece un numero abundante de etiquetas, que actuan como atajos para procesar el texto que escribimos directamente en el teclado. Acostumbrarse a usarlos lleva tiempo, pero al final nos permite escribir un texto embellecido con mucha mayor rapidez en el momento de crear nuestro blog. Existen una serie de caracteristicas avanzadas, que suponen una evolucion posterior del lenguaje original y que se denomino Multimarkdown. Seran tratadas en nuestro proximo articulo.","title":"Conclusion"},{"location":"markdown_extensions/","text":"Caracteristicas avanzadas de markdown. Con la intencion de adaptar markdown ( MD ) a un entorno academico, y permitir el uso, por ejemplo, de abreviaturas o tablas, se amplio el lenguaje. Esta ampliacion se denomino multimarkdown ( MMD ). En mkdocs, se utiliza una libreria de python markdown y esta ampliacion se implementa mediante markdown_extensions (ME) en el archivo de configuracion yaml. El programa incluye las siguiente extensiones por defecto (meta, toc, tables, and fenced_code). En este articulo, hablaremos de estas y de la incluidas a mayores en la configuracion de este blog. A continuacion presento un listado de las extensiones soportadas oficialmente por python markdown. Existen tambien extensiones de terceros, para mas informacion utilicen enlace de ME. Extension Entry Point Dot Notation Extra extra markdown.extensions.extra - Abbreviations abbr markdown.extensions.abbr - Attribute Lists attr_list markdown.extensions.attr_list - Definition Lists def_list markdown.extensions.def_list - Fenced Code Blocks fenced_code markdown.extensions.fenced_code - Footnotes footnotes markdown.extensions.footnotes - Markdown in HTML md_in_html markdown.extensions.md_in_html - Tables tables markdown.extensions.tables Admonition admonition markdown.extensions.admonition CodeHilite codehilite markdown.extensions.codehilite Legacy Attributes legacy_attrs markdown.extensions.legacy_attrs Legacy Emphasis legacy_em markdown.extensions.legacy_em Meta-Data meta markdown.extensions.meta New Line to Break nl2br markdown.extensions.nl2br Sane Lists sane_lists markdown.extensions.sane_lists SmartyPants smarty markdown.extensions.smarty Table of Contents toc markdown.extensions.toc WikiLinks wikilinks markdown.extensions.wikilinks Abreviaturas Son lineas no visibles cuyo texto aparecera cuando posemos el cursor sobre las abreviaturas del documento. *[MMD]: Abreviatura para Multimarkdown *[MD]: Abreviatura para Markdown Un sistema parecido, sin asterisco *, viene incluido por defecto para los enlaces . Resulta util separar los enlaces en el texto no formateado para facilitar la lectura. [enlaces][enlace a a\u00f1adir links] [enlace a a\u00f1adir links]: /markdown/#anadir-links Bloques de codigo vallado Los fenced code blocks ya los vimos en saltarse el formateado del texto . Es el metodo que utiliza virgulillas o acentos invertidos, frente al uso de indentado, que era el metodo originario de MD . Tablas Esta util caracteristica la utilizamos al inicio del articulo. Utiliza una barra vertical |, guion - y dos puntos : para su ejecucion, este ultimo para el justificado del texto. Extension | Entry Point | Dot Notation :--|:--:|--: izquierda | centro | derecha Extension Entry Point Dot Notation izquierda centro derecha Tabla de contenidos Esta extension se encarga se generar el indice con los cabeceros que aparecen en el navegador. Presenta las siguientes opciones configuradas por defecto. Opciones Por defecto slugify headerid.slugify separator \"-\" title automatically set permalink false permalink_title Permanent link baselevel 1 toc_depth 6 En breve, slugify es el metodo con que se crean los indices apartir del texto de los encabezados; sustituye los espacios en blanco con un separator . Permalink significa si deseamos mostrar dicho indice junto al encabezado y permalink_title el texto visible para dicho link. Title indica donde se obtiene el titulo del articulo que aparece en el navegador, por defecto procede del archivo de configuracio yaml. Por ultimo, baselevel indica el aspecto html del nivel de encabezado inicial(por defecto un # se corresponde con h1, si incrementas hasta 2 seria h2), y toc_depth el ultimo nivel de encabezado que genera una entrada en la tabla de contenidos. Si se desea ampliar la informacion, con atributos adicionales, les remitimos a la pagina especifica de python markdown . Metadatos Los metadatos de un texto son informacion estructurada con parejas de palabras clave/valor como el archivo de configuracion yaml, pero enfocados a cada articulo concreto. Incluye informacion descriptiva (autor, titulo, copyright) pero tambien informacion tecnica (CSS, HTML, LateX,BibTeX...) que permite un procesado posterior en el entorno adecuado. En el ambito de MMD , las palabras clave aplicables son fijas y aparecen en la documentacion original . Mkdocs permite utilizar tanto un estilo MMD , como un estilo yaml. Ambos deben incluirse al inicio del documento. Si el estilo es yaml hay que a\u00f1adir un delimitador de puntos ... o guiones --- . Una forma sencilla y practica de uso, es a traves de una plantilla con metadatos descripitivos, guardados en un archivo independiente que utilizaremos para empezar todos nuestros articulos. Podriamos aplicar las siguientes palabras clave, inevitablemente en ingles y sensible a may\u00fasculas: MMD original extension Title Summary Date blank-value Language some_urls Author Authors Affiliation Copyright Conclusion Me he centrado en las extensiones de MMD incluidas por defecto, si mas adelante descubriese otras nuevas que me pareciesen utiles las ire incluyendo. Con lo que he incluido, hay utilidades mas que suficientes para escribir en MD de forma comoda y eficiente. Quiero se\u00f1alar, que si bien yo estoy utilizando la version original de mkdocs, me he encotrado con una version mas evolucionada con una documentacion mas detallada y les dejo el link","title":"Tecnica de escritura avanzada"},{"location":"markdown_extensions/#caracteristicas-avanzadas-de-markdown","text":"Con la intencion de adaptar markdown ( MD ) a un entorno academico, y permitir el uso, por ejemplo, de abreviaturas o tablas, se amplio el lenguaje. Esta ampliacion se denomino multimarkdown ( MMD ). En mkdocs, se utiliza una libreria de python markdown y esta ampliacion se implementa mediante markdown_extensions (ME) en el archivo de configuracion yaml. El programa incluye las siguiente extensiones por defecto (meta, toc, tables, and fenced_code). En este articulo, hablaremos de estas y de la incluidas a mayores en la configuracion de este blog. A continuacion presento un listado de las extensiones soportadas oficialmente por python markdown. Existen tambien extensiones de terceros, para mas informacion utilicen enlace de ME. Extension Entry Point Dot Notation Extra extra markdown.extensions.extra - Abbreviations abbr markdown.extensions.abbr - Attribute Lists attr_list markdown.extensions.attr_list - Definition Lists def_list markdown.extensions.def_list - Fenced Code Blocks fenced_code markdown.extensions.fenced_code - Footnotes footnotes markdown.extensions.footnotes - Markdown in HTML md_in_html markdown.extensions.md_in_html - Tables tables markdown.extensions.tables Admonition admonition markdown.extensions.admonition CodeHilite codehilite markdown.extensions.codehilite Legacy Attributes legacy_attrs markdown.extensions.legacy_attrs Legacy Emphasis legacy_em markdown.extensions.legacy_em Meta-Data meta markdown.extensions.meta New Line to Break nl2br markdown.extensions.nl2br Sane Lists sane_lists markdown.extensions.sane_lists SmartyPants smarty markdown.extensions.smarty Table of Contents toc markdown.extensions.toc WikiLinks wikilinks markdown.extensions.wikilinks","title":"Caracteristicas avanzadas de markdown."},{"location":"markdown_extensions/#abreviaturas","text":"Son lineas no visibles cuyo texto aparecera cuando posemos el cursor sobre las abreviaturas del documento. *[MMD]: Abreviatura para Multimarkdown *[MD]: Abreviatura para Markdown Un sistema parecido, sin asterisco *, viene incluido por defecto para los enlaces . Resulta util separar los enlaces en el texto no formateado para facilitar la lectura. [enlaces][enlace a a\u00f1adir links] [enlace a a\u00f1adir links]: /markdown/#anadir-links","title":"Abreviaturas"},{"location":"markdown_extensions/#bloques-de-codigo-vallado","text":"Los fenced code blocks ya los vimos en saltarse el formateado del texto . Es el metodo que utiliza virgulillas o acentos invertidos, frente al uso de indentado, que era el metodo originario de MD .","title":"Bloques de codigo vallado"},{"location":"markdown_extensions/#tablas","text":"Esta util caracteristica la utilizamos al inicio del articulo. Utiliza una barra vertical |, guion - y dos puntos : para su ejecucion, este ultimo para el justificado del texto. Extension | Entry Point | Dot Notation :--|:--:|--: izquierda | centro | derecha Extension Entry Point Dot Notation izquierda centro derecha","title":"Tablas"},{"location":"markdown_extensions/#tabla-de-contenidos","text":"Esta extension se encarga se generar el indice con los cabeceros que aparecen en el navegador. Presenta las siguientes opciones configuradas por defecto. Opciones Por defecto slugify headerid.slugify separator \"-\" title automatically set permalink false permalink_title Permanent link baselevel 1 toc_depth 6 En breve, slugify es el metodo con que se crean los indices apartir del texto de los encabezados; sustituye los espacios en blanco con un separator . Permalink significa si deseamos mostrar dicho indice junto al encabezado y permalink_title el texto visible para dicho link. Title indica donde se obtiene el titulo del articulo que aparece en el navegador, por defecto procede del archivo de configuracio yaml. Por ultimo, baselevel indica el aspecto html del nivel de encabezado inicial(por defecto un # se corresponde con h1, si incrementas hasta 2 seria h2), y toc_depth el ultimo nivel de encabezado que genera una entrada en la tabla de contenidos. Si se desea ampliar la informacion, con atributos adicionales, les remitimos a la pagina especifica de python markdown .","title":"Tabla de contenidos"},{"location":"markdown_extensions/#metadatos","text":"Los metadatos de un texto son informacion estructurada con parejas de palabras clave/valor como el archivo de configuracion yaml, pero enfocados a cada articulo concreto. Incluye informacion descriptiva (autor, titulo, copyright) pero tambien informacion tecnica (CSS, HTML, LateX,BibTeX...) que permite un procesado posterior en el entorno adecuado. En el ambito de MMD , las palabras clave aplicables son fijas y aparecen en la documentacion original . Mkdocs permite utilizar tanto un estilo MMD , como un estilo yaml. Ambos deben incluirse al inicio del documento. Si el estilo es yaml hay que a\u00f1adir un delimitador de puntos ... o guiones --- . Una forma sencilla y practica de uso, es a traves de una plantilla con metadatos descripitivos, guardados en un archivo independiente que utilizaremos para empezar todos nuestros articulos. Podriamos aplicar las siguientes palabras clave, inevitablemente en ingles y sensible a may\u00fasculas: MMD original extension Title Summary Date blank-value Language some_urls Author Authors Affiliation Copyright","title":"Metadatos"},{"location":"markdown_extensions/#conclusion","text":"Me he centrado en las extensiones de MMD incluidas por defecto, si mas adelante descubriese otras nuevas que me pareciesen utiles las ire incluyendo. Con lo que he incluido, hay utilidades mas que suficientes para escribir en MD de forma comoda y eficiente. Quiero se\u00f1alar, que si bien yo estoy utilizando la version original de mkdocs, me he encotrado con una version mas evolucionada con una documentacion mas detallada y les dejo el link","title":"Conclusion"},{"location":"mkdocs/","text":"Soporte tecnico de esta web El metodo para la publicacion de esta web, probablemente sea el mas eficiente que existe en la actualidad. Un programa llamado mkdocs te da la infraestructura para convertir archivos de texto en html, la conversion se agrupa en un directorio y este directorio se sube a internet con un copia y pegar. El procedimiento tienes varios matices que vamos a ver a continuacion, pero el resumen es correcto. Mkdocs. Instalacion Es un programa escrito en python que funciona en linea de comandos. Para su uso, la instalacion de python es imprescindible. Tambien resulta conveniente instalar un programa llamado anaconda o su version lite, miniconda3, que actue de contenedor de la instalacion de python, en lugar de instalarlo directamente en el sistema. Miniconda se instala mediante un ejecutable y te da un entorno en linea de comandos que permite instalar python atraves de la orden: conda create -n myenv Python te permite instalar mkdocs en linea de comandos con pip: pip install mkdocs. Mkdocs. Uso El uso principal de este programa, y otros parecidos, es publicar documentacion tecnica. En algunos casos acaban reproducidos en libros identicos al material en linea. Por ello, la pagina web de presentacion es la propia documentacion tecnica del producto y se encuentra alojada en: mkdocs . En breve, hay una estructura de directorios con archivos de tipo markdown y en el directorio base hay un archivo de tipo yaml que sirve para la configuracion. El archivo yaml configura el navegador de la pagina web y su conexion a los archivos markdown, el titulo, el tema de estilo, los atributos en la conversion del markdown a html y distintos plugins. Durante la configuracion se puede lanzar un servidor en linea de comandos mediante la orden: mkdocs serve. Cuando nos disponemos a publicar hay que generar un directorio de html, css y javascript mediante la orden : mkdocs build. Mkdoks. Despliegue manual en netlify La publicacion se puede hacer manualmente o atraves de un sistema de control de versiones tipo git. El despliegue manual es tan sencillo como copiar el directorio producido en el paso anterior y pegarlo en la pagina habilitada por netlify. Conclusion Es un sistema muy rapido de publicacion, progresivamente ganando habilidades con la escritura markdown y mejorando la configuracion basica yaml, para mejorar sus prestaciones. Pero de entrada, ya estamos publicando. El proximo capitulo explicara como incorporar un sistema de control de versiones, que nos facilitara enormemente la actualizacion de nuestra pagina web.","title":"Aspectos b\u00e1sicos"},{"location":"mkdocs/#soporte-tecnico-de-esta-web","text":"El metodo para la publicacion de esta web, probablemente sea el mas eficiente que existe en la actualidad. Un programa llamado mkdocs te da la infraestructura para convertir archivos de texto en html, la conversion se agrupa en un directorio y este directorio se sube a internet con un copia y pegar. El procedimiento tienes varios matices que vamos a ver a continuacion, pero el resumen es correcto.","title":"Soporte tecnico de esta web"},{"location":"mkdocs/#mkdocs-instalacion","text":"Es un programa escrito en python que funciona en linea de comandos. Para su uso, la instalacion de python es imprescindible. Tambien resulta conveniente instalar un programa llamado anaconda o su version lite, miniconda3, que actue de contenedor de la instalacion de python, en lugar de instalarlo directamente en el sistema. Miniconda se instala mediante un ejecutable y te da un entorno en linea de comandos que permite instalar python atraves de la orden: conda create -n myenv Python te permite instalar mkdocs en linea de comandos con pip: pip install mkdocs.","title":"Mkdocs. Instalacion"},{"location":"mkdocs/#mkdocs-uso","text":"El uso principal de este programa, y otros parecidos, es publicar documentacion tecnica. En algunos casos acaban reproducidos en libros identicos al material en linea. Por ello, la pagina web de presentacion es la propia documentacion tecnica del producto y se encuentra alojada en: mkdocs . En breve, hay una estructura de directorios con archivos de tipo markdown y en el directorio base hay un archivo de tipo yaml que sirve para la configuracion. El archivo yaml configura el navegador de la pagina web y su conexion a los archivos markdown, el titulo, el tema de estilo, los atributos en la conversion del markdown a html y distintos plugins. Durante la configuracion se puede lanzar un servidor en linea de comandos mediante la orden: mkdocs serve. Cuando nos disponemos a publicar hay que generar un directorio de html, css y javascript mediante la orden : mkdocs build.","title":"Mkdocs. Uso"},{"location":"mkdocs/#mkdoks-despliegue-manual-en-netlify","text":"La publicacion se puede hacer manualmente o atraves de un sistema de control de versiones tipo git. El despliegue manual es tan sencillo como copiar el directorio producido en el paso anterior y pegarlo en la pagina habilitada por netlify.","title":"Mkdoks. Despliegue manual en netlify"},{"location":"mkdocs/#conclusion","text":"Es un sistema muy rapido de publicacion, progresivamente ganando habilidades con la escritura markdown y mejorando la configuracion basica yaml, para mejorar sus prestaciones. Pero de entrada, ya estamos publicando. El proximo capitulo explicara como incorporar un sistema de control de versiones, que nos facilitara enormemente la actualizacion de nuestra pagina web.","title":"Conclusion"},{"location":"publicacion_automatica/","text":"Publicacion autom\u00e1tica en Netlify La publicacion en Netlify de un sitio generado en python no es un proceso habitual, dado que Netlify esta orientado a javascript. En cualquier caso es posible, siempre que la trasformacion de markdown hacia html la hagamos previamente y enviaemos el resultado a Netlify. El proceso requiere del uso de un programa en linea de comandos llamado git, su conexion a un sistema de hospedaje llamado Github, y la conexion de este a Netlify. La ejecucion de primer envio es lo que explicaremos a continuacion, ya que los siguientes se realizan con una linea de comando de git. Git Git es un programa para controlar las versiones de nuestro proyectos. Le indicamos que directorio queremos controlar y de forma automatica almacena cada version, mientras lleva un control de los cambios realizados. En proyectos multipersonales, nos da un control sobre la autoria y la fecha de cada parte y version del proyecto. En nuestro caso su uso es sencillo, con el objetivo de automatizar el proceso de publicacion. Tras instalar Git, activamos una terminal y en linea de comandos nos dirigimos al directorio que deseamos controlar, y alli escribimos: git init A partir de este momento habremos creado un sistema git en una carpeta oculta en el directorio elegido o area de trabajo. Un sistema git consta de un area de trabajo y dos carpetas virtuales, el area de preparacion (staging area) y el repositorio git. ). El flujo de trabajo es circular, del area de trabajo al area de preparacion, con git add . (se puede seleccionar parte del directorio, el punto indica todos el contenido) del area de preparacion al repositorio, con git commit -m \"Mensaje asociado a la version\" tras crear un repositorio, podemos comparar los cambios con el area de trabajo con git diff si quisiesemos recuperar parte o todo el repositorio git al area de trabajo, usariamos git stash Por ultimo, indicar que podemos dejar fuera de este proceso circular, archivos y carpetas creando un archivo de configuracion en el area de trabajo denominado .gitignore Para cumplir nuestro objetivo no hace falta conocer el programa en profundidad, por lo que pasaremos al siguiente paso. Github Es un anfitrion en la nube intimamente relacionado con el sistema Git, que almacena los repositorios que le enviamos, te da la opcion de mostrar publicamente las lineas de codigo y facilita el trabajo colaborativo. Para utilizarlo hace falta abrir una cuenta, crear un repositorio nuevo y almacenar la direccion http creada en nuestro git local mediante la orden: git remote add origin https://github.com/nombre de cuenta/nombre de repositorio.git Estas ordenes vienen especificadas en la pagina abierta por github tras crear un repositorio nuevo. La siguiente es git branch -M main que utiliza el modificador -M para mover/renombrar una rama, incluso si el destino existe . Podemos ver todas la rama asociadas a nuestro repositorio local utilizando la linea git branch -a Por ultimo, empujamos nuestro repositorio hacia el anfitrion con git push -u origin main donde el modificador -u configurar upstream para git pull/status Netlify Uno de los metodos para acceder a Netlify es utilizar la misma cuenta de Github. Luego es preciso establecer una conexion entre el repositorio que queremos publicar y su localizacion de publicacion. Existe un boton que indica publicacion de un nuevo sitio web, y un asistente te dirige a lo largo de proceso. Si has llegado hasta aqui, y todo a funcionado, de ahora en adelante, no necesitaras interactuar con Gibhub ni Netlify. Sigues los pasos para actualizar tu repositorio local, y luego, solo tendras que escribir git push -u origin main , y la actualizacion de tu web se publicara inmediatamente. Conclusion La automatizacion es un proceso laborioso por etapas, pero positivo en el largo paso. Dejo a continuacion un resumen de los pasos realizados Git git init git add . git commit -m \"Mensaje asociado a la version\" Github. Tras crear repositorio en linea. git remote add origin https://github.com/nombre de cuenta/nombre de repositorio.git git branch -M main git push -u origin main Las aplicaciones de Git y de Github, asi como su implementacion en linea de comandos, son mucho mas variadas de lo que hemos presentado en esta peque\u00f1a introduccion. En todo caso, este es un buen principio para acostumbrarse a utilizalas y a entenderlas.","title":"Publicacion automatica en Netlify"},{"location":"publicacion_automatica/#publicacion-automatica-en-netlify","text":"La publicacion en Netlify de un sitio generado en python no es un proceso habitual, dado que Netlify esta orientado a javascript. En cualquier caso es posible, siempre que la trasformacion de markdown hacia html la hagamos previamente y enviaemos el resultado a Netlify. El proceso requiere del uso de un programa en linea de comandos llamado git, su conexion a un sistema de hospedaje llamado Github, y la conexion de este a Netlify. La ejecucion de primer envio es lo que explicaremos a continuacion, ya que los siguientes se realizan con una linea de comando de git.","title":"Publicacion autom\u00e1tica en Netlify"},{"location":"publicacion_automatica/#git","text":"Git es un programa para controlar las versiones de nuestro proyectos. Le indicamos que directorio queremos controlar y de forma automatica almacena cada version, mientras lleva un control de los cambios realizados. En proyectos multipersonales, nos da un control sobre la autoria y la fecha de cada parte y version del proyecto. En nuestro caso su uso es sencillo, con el objetivo de automatizar el proceso de publicacion. Tras instalar Git, activamos una terminal y en linea de comandos nos dirigimos al directorio que deseamos controlar, y alli escribimos: git init A partir de este momento habremos creado un sistema git en una carpeta oculta en el directorio elegido o area de trabajo. Un sistema git consta de un area de trabajo y dos carpetas virtuales, el area de preparacion (staging area) y el repositorio git. ). El flujo de trabajo es circular, del area de trabajo al area de preparacion, con git add . (se puede seleccionar parte del directorio, el punto indica todos el contenido) del area de preparacion al repositorio, con git commit -m \"Mensaje asociado a la version\" tras crear un repositorio, podemos comparar los cambios con el area de trabajo con git diff si quisiesemos recuperar parte o todo el repositorio git al area de trabajo, usariamos git stash Por ultimo, indicar que podemos dejar fuera de este proceso circular, archivos y carpetas creando un archivo de configuracion en el area de trabajo denominado .gitignore Para cumplir nuestro objetivo no hace falta conocer el programa en profundidad, por lo que pasaremos al siguiente paso.","title":"Git"},{"location":"publicacion_automatica/#github","text":"Es un anfitrion en la nube intimamente relacionado con el sistema Git, que almacena los repositorios que le enviamos, te da la opcion de mostrar publicamente las lineas de codigo y facilita el trabajo colaborativo. Para utilizarlo hace falta abrir una cuenta, crear un repositorio nuevo y almacenar la direccion http creada en nuestro git local mediante la orden: git remote add origin https://github.com/nombre de cuenta/nombre de repositorio.git Estas ordenes vienen especificadas en la pagina abierta por github tras crear un repositorio nuevo. La siguiente es git branch -M main que utiliza el modificador -M para mover/renombrar una rama, incluso si el destino existe . Podemos ver todas la rama asociadas a nuestro repositorio local utilizando la linea git branch -a Por ultimo, empujamos nuestro repositorio hacia el anfitrion con git push -u origin main donde el modificador -u configurar upstream para git pull/status","title":"Github"},{"location":"publicacion_automatica/#netlify","text":"Uno de los metodos para acceder a Netlify es utilizar la misma cuenta de Github. Luego es preciso establecer una conexion entre el repositorio que queremos publicar y su localizacion de publicacion. Existe un boton que indica publicacion de un nuevo sitio web, y un asistente te dirige a lo largo de proceso. Si has llegado hasta aqui, y todo a funcionado, de ahora en adelante, no necesitaras interactuar con Gibhub ni Netlify. Sigues los pasos para actualizar tu repositorio local, y luego, solo tendras que escribir git push -u origin main , y la actualizacion de tu web se publicara inmediatamente.","title":"Netlify"},{"location":"publicacion_automatica/#conclusion","text":"La automatizacion es un proceso laborioso por etapas, pero positivo en el largo paso. Dejo a continuacion un resumen de los pasos realizados Git git init git add . git commit -m \"Mensaje asociado a la version\" Github. Tras crear repositorio en linea. git remote add origin https://github.com/nombre de cuenta/nombre de repositorio.git git branch -M main git push -u origin main Las aplicaciones de Git y de Github, asi como su implementacion en linea de comandos, son mucho mas variadas de lo que hemos presentado en esta peque\u00f1a introduccion. En todo caso, este es un buen principio para acostumbrarse a utilizalas y a entenderlas.","title":"Conclusion"},{"location":"src/Plantilla_yaml/","text":"Title: Summary: Date: 20/10/2020 Language: Espa\u00f1ol some_urls: quintosertorio2.netlify.app Authors: Quinto Sertorio Affiliation: NA Copyright: NA","title":"Plantilla yaml"}]}